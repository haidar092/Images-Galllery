{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","setImage","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAkCeA,EAhCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACI,mCACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,yCAAf,oBAAgEH,EAAMO,KAAtE,OACA,+BACI,+BACI,4CADJ,IAC6BP,EAAMQ,SAEnC,+BACI,gDADJ,IACiCR,EAAMS,aAEvC,+BACI,2CADJ,IAC4BT,EAAMU,eAK1C,qBAAKP,UAAU,YAAf,SACKF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACN,uBAAkBV,UAAU,0FAA5B,cAAwHS,IAA7GC,cCEpBC,EAxBK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAClB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OACI,mCACI,qBAAKf,UAAU,iDAAf,SACI,sBAAMgB,SARD,SAACC,GACdA,EAAEC,iBAEFN,EAAWE,IAKuBd,UAAU,kBAApC,SACI,sBAAKA,UAAU,6DAAf,UACI,uBAAOmB,SAAU,SAAAF,GAAC,OAAGF,EAAQE,EAAEG,OAAOC,QAAQrB,UAAU,qHACXsB,KAAK,OAAOC,YAAY,yBACrE,wBAAQvB,UAAU,wIACsDsB,KAAK,SAD7E,8BCmBTE,MAhCf,WAEE,MAA0BX,mBAAS,IAAnC,mBAAOhB,EAAP,KAAc4B,EAAd,KACA,EAAkCZ,oBAAS,GAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAwBd,mBAAS,aAAjC,mBAAOe,EAAP,KAAaC,EAAb,KAYA,OAVAC,qBAAU,WACTC,MAAK,uCAAkCC,qCAAlC,cAA6EJ,EAA7E,kCACJK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAASW,EAAKC,MACdV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAExB,CAACX,IAEF,sBAAK5B,UAAU,qBAAf,UACE,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAUe,EAAQf,OAEzCY,GAA8B,IAAjB7B,EAAM6C,QAAgB,oBAAI1C,UAAU,qCAAd,kCAEpC0B,EAAY,oBAAI1B,UAAU,qCAAd,0BAAsE,qBAAKA,UAAU,yBAAf,SAChFH,EAAMW,KAAI,SAAAX,GAAK,OACd,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM8C,aCvBhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d51f8239.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ImageCard = ({ image }) => {\r\n    const tags = image.tags.split(',');\r\n    return (\r\n        <>\r\n            <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n                <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\r\n                <div className=\"px-6 py-4\">\r\n                    <div className=\"font-bold text-purple-500 text-xl mb-2\">Pic by {image.user} </div>\r\n                    <ul>\r\n                        <li>\r\n                            <strong>Views:</strong> {image.views}\r\n                        </li>\r\n                        <li>\r\n                            <strong>downloads:</strong> {image.downloads}\r\n                        </li>\r\n                        <li>\r\n                            <strong>Like:</strong> {image.likes}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"px-6 py-4\">\r\n                    {tags.map((tag, index) => (\r\n                        <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold tex-gray-700 mr-2\">#{tag}</span>\r\n\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageCard;\r\n","import React, { useState } from 'react';\r\n\r\n\r\nconst ImageSearch = ({searchText}) => {\r\n    const [text, setText] = useState('');\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        searchText(text);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n                <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n                    <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n                        <input onChange={e =>setText(e.target.value)} className=\"appearance-one bg-transparent border-none w-full text-gray-700 mr-3 \r\n                        py-1 px-2 leading-tight focous:outline-none\" type=\"text\" placeholder=\"Search Image Term...\"  />\r\n                        <button className=\"flex-shrink-0 bg-green-500 hover:bg-green-700 border-dark-500\r\n                         hover:border-black-700 text-sm border-4 text-white py-1 px-2 rounded \" type=\"submit\">Search</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageSearch;\r\n","import { useEffect, useState } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport ImageSearch from \"./components/ImageSearch\";\n\n\nfunction App() {\n\n  const [image, setImage] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('developer');\n\n  useEffect(() => {\n   fetch (`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n   .then(res => res.json())\n   .then(data => {\n     setImage(data.hits);\n     setIsLoading(false);\n   })\n   .catch(err => console.log(err));  \n   \n  }, [term])\n  return (\n    <div className=\"container mx-auto \">\n      <ImageSearch searchText={(text) => setTerm(text)}/>\n      \n      {!isLoading && image.length === 0 && <h1 className=\"text-6xl text-center mx-auto mt-32\"> Images Not Fount...</h1>}\n      \n      {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\"> LODING.....</h1> :<div className=\"grid grid-cols-3 gap-8\">\n        {image.map(image =>(\n          <ImageCard key={image.id} image={image}/>\n        ))}\n      </div>}\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}